@page "/DispatchUI1"

@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Components.Web
@inject IJSRuntime JSRuntime

<h1>Dispatch UI1</h1>
@* <div class="table">
    <div class="table-header">
        @foreach (var column in Columns)
        {
            <div class="table-cell">@column</div>
        }
    </div>
    <div class="table-body">
        @for (int i = 0; i < Rows; i++)
        {
            <div class="table-row">
                @for (int j = 0; j < Columns.Count; j++)
                {
                    <div class="table-cell" @ondragover="@((DragEventArgs e) => OnDragOver(e, i, j))"
                         @ondrop="@((DragEventArgs e) => OnDrop(e, i, j))">
                        @if (Cards.ContainsKey((i, j)))
                        {
                            var card = Cards[(i, j)];
                            <div draggable="true" class="card" @ondragstart="@((DragEventArgs e) => OnDragStart(e, i, j))">
                                <h4>@card.Title</h4>
                                <p>@card.Content</p>
                            </div>
                        }
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    private List<string> Columns { get; set; } = new List<string>();
    private int Rows { get; set; } = 3; // Default number of rows
    private Dictionary<(int, int), CardModel> Cards { get; set; } = new Dictionary<(int, int), CardModel>();

    protected override void OnInitialized()
    {
        // Default columns
        Columns.AddRange(Enumerable.Range(1, 3).Select(i => $"Column {i}"));
    }

    private async Task OnDrop(DragEventArgs e, int rowIndex, int colIndex)
    {
        var card = await e.DataTransfer.GetDataAsync<CardModel>();
        if (card != null)
        {
            Cards[(rowIndex, colIndex)] = card;
            StateHasChanged();
        }
    }

    private void OnDragOver(DragEventArgs e, int rowIndex, int colIndex)
    {
        e.PreventDefault();
    }

    private async void OnDragStart(DragEventArgs e, int rowIndex, int colIndex)
    {
        await e.DataTransfer.SetDataAsync("application/json", Cards[(rowIndex, colIndex)]);
    }

    public class CardModel
    {
        public string Title { get; set; }
        public string Content { get; set; }
    }
}

 *@